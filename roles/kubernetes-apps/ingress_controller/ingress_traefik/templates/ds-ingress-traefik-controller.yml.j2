---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ingress-traefik-controller
  namespace: {{ ingress_traefik_namespace }}
  labels:
    app.kubernetes.io/name: ingress-traefik
    app.kubernetes.io/part-of: ingress-traefik
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-traefik
      app.kubernetes.io/part-of: ingress-traefik
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-traefik
        app.kubernetes.io/part-of: ingress-traefik
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: ingress-traefik
{% if ingress_traefik_host_network %}
      hostNetwork: true
{% endif %}
{% if ingress_traefik_nodeselector %}
      nodeSelector:
        {{ ingress_traefik_nodeselector | to_nice_yaml }}
{%- endif %}
{% if kube_version|version_compare('v1.11.1', '>=') %}
      priorityClassName: {% if ingress_traefik_namespace == 'kube-system' %}system-node-critical{% else %}k8s-cluster-critical{% endif %}{{''}}
{% endif %}
      containers:
        - name: ingress-traefik-controller
          image: {{ ingress_traefik_controller_image_repo }}:{{ ingress_traefik_controller_image_tag }}
          imagePullPolicy: {{ k8s_image_pull_policy }}
          args:
            - /traefik-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-backend
            - --configmap=$(POD_NAMESPACE)/ingress-traefik
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --annotations-prefix=traefik.ingress.kubernetes.io
          securityContext:
            capabilities:
                drop:
                  - ALL
                add:
                  - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
              hostPort: {{ ingress_traefik_insecure_port }}
            - name: https
              containerPort: 443
              hostPort: {{ ingress_traefik_secure_port }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
